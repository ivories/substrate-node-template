[{"/var/home/core/data/rust/substrate-node-template/frontend/src/index.js":"1","/var/home/core/data/rust/substrate-node-template/frontend/src/App.js":"2","/var/home/core/data/rust/substrate-node-template/frontend/src/AccountSelector.js":"3","/var/home/core/data/rust/substrate-node-template/frontend/src/Balances.js":"4","/var/home/core/data/rust/substrate-node-template/frontend/src/Interactor.js":"5","/var/home/core/data/rust/substrate-node-template/frontend/src/Events.js":"6","/var/home/core/data/rust/substrate-node-template/frontend/src/Metadata.js":"7","/var/home/core/data/rust/substrate-node-template/frontend/src/BlockNumber.js":"8","/var/home/core/data/rust/substrate-node-template/frontend/src/NodeInfo.js":"9","/var/home/core/data/rust/substrate-node-template/frontend/src/Kitties.js":"10","/var/home/core/data/rust/substrate-node-template/frontend/src/TemplateModule.js":"11","/var/home/core/data/rust/substrate-node-template/frontend/src/Transfer.js":"12","/var/home/core/data/rust/substrate-node-template/frontend/src/Upgrade.js":"13","/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/components/index.js":"14","/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/index.js":"15","/var/home/core/data/rust/substrate-node-template/frontend/src/KittyCards.js":"16","/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/components/TxButton.js":"17","/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/components/DeveloperConsole.js":"18","/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/SubstrateContext.js":"19","/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/utils.js":"20","/var/home/core/data/rust/substrate-node-template/frontend/src/KittyAvatar.js":"21","/var/home/core/data/rust/substrate-node-template/frontend/src/config/index.js":"22"},{"size":150,"mtime":1612234437000,"results":"23","hashOfConfig":"24"},{"size":2799,"mtime":1612234437000,"results":"25","hashOfConfig":"24"},{"size":3555,"mtime":1612234437000,"results":"26","hashOfConfig":"24"},{"size":2389,"mtime":1612234437000,"results":"27","hashOfConfig":"24"},{"size":8101,"mtime":1612234437000,"results":"28","hashOfConfig":"24"},{"size":2192,"mtime":1612234437000,"results":"29","hashOfConfig":"24"},{"size":1471,"mtime":1612234437000,"results":"30","hashOfConfig":"24"},{"size":1619,"mtime":1612234437000,"results":"31","hashOfConfig":"24"},{"size":1538,"mtime":1612234437000,"results":"32","hashOfConfig":"24"},{"size":3342,"mtime":1612234437000,"results":"33","hashOfConfig":"24"},{"size":2323,"mtime":1612234437000,"results":"34","hashOfConfig":"24"},{"size":1972,"mtime":1612234437000,"results":"35","hashOfConfig":"24"},{"size":1578,"mtime":1612234437000,"results":"36","hashOfConfig":"24"},{"size":160,"mtime":1612234437000,"results":"37","hashOfConfig":"24"},{"size":167,"mtime":1612234437000,"results":"38","hashOfConfig":"24"},{"size":6200,"mtime":1612234437000,"results":"39","hashOfConfig":"24"},{"size":8005,"mtime":1612234437000,"results":"40","hashOfConfig":"24"},{"size":463,"mtime":1612234437000,"results":"41","hashOfConfig":"24"},{"size":4308,"mtime":1612234437000,"results":"42","hashOfConfig":"24"},{"size":210,"mtime":1612234437000,"results":"43","hashOfConfig":"24"},{"size":5616,"mtime":1612598778618,"results":"44","hashOfConfig":"24"},{"size":646,"mtime":1612234437000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"11fgxkj",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/var/home/core/data/rust/substrate-node-template/frontend/src/index.js",[],["92","93"],"/var/home/core/data/rust/substrate-node-template/frontend/src/App.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/AccountSelector.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/Balances.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/Interactor.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/Events.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/Metadata.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/BlockNumber.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/NodeInfo.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/Kitties.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/TemplateModule.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/Transfer.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/Upgrade.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/components/index.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/index.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/KittyCards.js",["94","95"],"import React from 'react';\nimport { Button, Card, Grid, Message, Modal, Form, Label } from 'semantic-ui-react';\n\nimport KittyAvatar from './KittyAvatar';\nimport { TxButton } from './substrate-lib/components';\n\n// --- About Modal ---\n\nconst TransferModal = props => {\n  const { kitty, accountPair, setStatus } = props;\n  const [open, setOpen] = React.useState(false);\n  const [formValue, setFormValue] = React.useState({});\n\n  const formChange = key => (ev, el) => {\n    /* TODO: 加代码 */\n    // 修改 key 的值，prev 是引用的先前的值，...prev 表示其余的值保持不变\n    setFormValue(prev => ({ ...prev, [key]: el.value }));\n  };\n\n  const confirmAndClose = (unsub) => {\n    unsub();\n    setOpen(false);\n  };\n\n  return <Modal onClose={() => setOpen(false)} onOpen={() => setOpen(true)} open={open}\n    trigger={<Button basic color='blue'>转让</Button>}>\n    <Modal.Header>毛孩转让</Modal.Header>\n    <Modal.Content><Form>\n      <Form.Input fluid label='毛孩 ID' readOnly value={kitty.id}/>\n      <Form.Input fluid label='转让对象' placeholder='对方地址' onChange={formChange('target')}/>\n    </Form></Modal.Content>\n    <Modal.Actions>\n      <Button basic color='grey' onClick={() => setOpen(false)}>取消</Button>\n      <TxButton\n        accountPair={accountPair} label='确认转让' type='SIGNED-TX' setStatus={setStatus}\n        onClick={confirmAndClose}\n        attrs={{\n          palletRpc: 'kittiesModule',\n          callable: 'transfer',\n          inputParams: [formValue.target, kitty.id],\n          paramFields: [true, true]\n        }}\n      />\n    </Modal.Actions>\n  </Modal>;\n};\n\nconst PricingModal = props => {\n  const { kitty, accountPair, setStatus } = props;\n  const [open, setOpen] = React.useState(false);\n  const [formValue, setFormValue] = React.useState({});\n\n  const formChange = key => (ev, el) => {\n    // 修改 key 的值，prev 是引用的先前的值，...prev 表示其余的值保持不变\n    setFormValue(prev => ({ ...prev, [key]: el.value }));\n  };\n\n  const confirmAndClose = (unsub) => {\n    unsub();\n    setOpen(false);\n  };\n\n  return <Modal onClose={() => setOpen(false)} onOpen={() => setOpen(true)} open={open}\n    trigger={<Button basic color='blue'>定价</Button>}>\n    <Modal.Header>毛孩定价</Modal.Header>\n    <Modal.Content><Form>\n      <Form.Input fluid label='毛孩 ID' readOnly value={kitty.id}/>\n      <Form.Input fluid label='新价格' placeholder='售卖价格' onChange={formChange('price')}/>\n    </Form></Modal.Content>\n    <Modal.Actions>\n      <Button basic color='grey' onClick={() => setOpen(false)}>取消</Button>\n      <TxButton\n        accountPair={accountPair} label='确认更改' type='SIGNED-TX' setStatus={setStatus}\n        onClick={confirmAndClose}\n        attrs={{\n          palletRpc: 'kittiesModule',\n          callable: 'ask',\n          inputParams: [kitty.id, formValue.price],\n          paramFields: [true, true]\n        }}\n      />\n    </Modal.Actions>\n  </Modal>;\n};\n\nconst BuyModal = props => {\n  const { kitty, accountPair, setStatus } = props;\n  const [open, setOpen] = React.useState(false);\n\n  const confirmAndClose = (unsub) => {\n    unsub();\n    setOpen(false);\n  };\n\n  return <Modal onClose={() => setOpen(false)} onOpen={() => setOpen(true)} open={open}\n    trigger={<Button basic color='blue'>购买</Button>}>\n    <Modal.Header>毛孩购买让</Modal.Header>\n    <Modal.Content><Form>\n      <Form.Input fluid label='毛孩 ID' readOnly value={kitty.id}/>\n      <Form.Input fluid label='价格' readOnly value={kitty.price}/>\n    </Form></Modal.Content>\n    <Modal.Actions>\n      <Button basic color='grey' onClick={() => setOpen(false)}>取消</Button>\n      <TxButton\n        accountPair={accountPair} label='确认购买' type='SIGNED-TX' setStatus={setStatus}\n        onClick={confirmAndClose}\n        attrs={{\n          palletRpc: 'kittiesModule',\n          callable: 'buy',\n          inputParams: [kitty.id, kitty.price],\n          paramFields: [true, true]\n        }}\n      />\n    </Modal.Actions>\n  </Modal>;\n};\n\n// --- About Kitty Card ---\n\nconst KittyCard = props => {\n  /*\n    TODO: 加代码。这里会 UI 显示一张 `KittyCard` 是怎么样的。这里会用到：\n    ```\n    <KittyAvatar dna={dna} /> - 来描绘一只猫咪\n    <TransferModal kitty={kitty} accountPair={accountPair} setStatus={setStatus}/> - 来作转让的弹出层\n    ```\n  */\n  const { kitty, owner, price, accountPair, setStatus } = props;\n\n  if (owner === accountPair.address) {\n    kitty.is_owner = true;\n  }\n  kitty.price = price;\n\n  return (\n    <Grid.Column>\n      <Card style={{ wordBreak: 'break-all', width: '275px', margin: '5px' }}>\n        <Card.Content>\n          <Card.Header>ID {kitty.id}</Card.Header>\n          <KittyAvatar dna={kitty.dna} />\n          <Card.Description>\n            <b>dna: {kitty.dna}</b> <br />\n            <b>price: {kitty.price}</b> <br />\n            <b>owner: {kitty.is_owner ? 'mine' : owner }</b> <br />\n          </Card.Description>\n          {\n            kitty.is_owner && <TransferModal kitty={kitty} accountPair={accountPair} setStatus={setStatus}/>\n          }\n          {\n            kitty.is_owner && <PricingModal kitty={kitty} accountPair={accountPair} setStatus={setStatus}/>\n          }\n          {\n            !kitty.is_owner && <BuyModal kitty={kitty} accountPair={accountPair} setStatus={setStatus}/>\n          }\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n};\n\nconst KittyCards = props => {\n  const { kitties, kittyOwners, kittyPrices, accountPair, setStatus } = props;\n\n  /* TODO: 加代码。这里会枚举所有的 `KittyCard` */\n  return (\n    <Grid stackable columns='equal'>\n      <Grid.Row stretched>\n        {\n          kitties.map((kitty, index) => {\n            return (\n              <Grid.Row key={index}>\n                <KittyCard\n                  kitty={kitty}\n                  owner={kittyOwners[index]}\n                  price={kittyPrices[index]}\n                  accountPair={accountPair}\n                  setStatus={setStatus}\n                />\n              </Grid.Row>\n            );\n          })\n        }\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nexport default KittyCards;\n","/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/components/TxButton.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/components/DeveloperConsole.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/SubstrateContext.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/substrate-lib/utils.js",[],"/var/home/core/data/rust/substrate-node-template/frontend/src/KittyAvatar.js",["96"],"/var/home/core/data/rust/substrate-node-template/frontend/src/config/index.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":30,"nodeType":"103","messageId":"104","endLine":2,"endColumn":37},{"ruleId":"101","severity":1,"message":"105","line":2,"column":52,"nodeType":"103","messageId":"104","endLine":2,"endColumn":57},{"ruleId":"106","severity":1,"message":"107","line":106,"column":1,"nodeType":"108","messageId":"109","endLine":106,"endColumn":3,"fix":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","no-trailing-spaces","Trailing spaces not allowed.","Program","trailingSpace",{"range":"113","text":"114"},"no-global-assign","no-unsafe-negation",[5242,5244],""]